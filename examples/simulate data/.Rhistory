setwd("C:/Users/linzh/Desktop/pmd/examples/simulate data")
rm(list = ls())
source('myfunctions.R')
dyn.load('functions.so')
N = 500
real_parm = matrix(c(0.5,0.6,0.7,0.8),nrow = 2,ncol = 2)
x1 = rnorm(N)
x2 = rnorm(N)
x = as.matrix(cbind(x1,x2))
real_P = exp(x%*%real_parm)/(rowSums(exp(x%*%real_parm))+1)
real_P = cbind(real_P,1/(rowSums(exp(x%*%real_parm))+1))
choice = apply(real_P,1,rmultinom,n=1,size=1)
choice = t(choice)
y = apply(choice,1,function(x) which(x==1))
View(x)
View(real_P)
y
dat_simu = as.data.frame(cbind(x1,x2,y))
out = make.data.equal.groups(dat_simu,50,category_name = c(1,2,3),category_column = 'y')
groups = out[[1]]
count_result = out[[2]]
category_number = 3
groups[[1]]
count_result[[1]]
count_result[1]
count_result
View(groups)
groups[[2]]
View(make.data.equal.groups)
dat_simu = as.data.frame(cbind(x1,x2,y))
View(dat_simu)
groups_number=50
n=500
sample(1:groups_number,size=n,replace=TRUE,prob=rep(1/groups_number,groups_number))
ss = sample(1:groups_number,size=n,replace=TRUE,prob=rep(1/groups_number,groups_number))
ss
out = make.data.equal.groups(dat_simu,50,category_name = c(1,2,3),category_column = 'y')
groups = out[[1]]
groups[[1]]
groups[[2]]
groups[[3]]
18.2+1.64*5.34/sqrt(6)
18.2+ 1.64*5.34
18.2+ 1.64*5.34/6
18.2+ 1.64*5.34/sqrt(6)
18.2+ 1.96*5.34/sqrt(6)
18.166+ 1.96*5.34/sqrt(6)
x=22+25+17+20+15+10
x
d = c(22,25,17,20,15,10)
var(d)
sqrt(d)
sqrt(var(d))
mean(d)
mean(d)+1.69*5.344779/sqrt(6)
mean(d)+1.96*5.344779/sqrt(6)
5.344^2
5.344^2*5
/6
5.344^2*5/6
sqrt(23.79)
5.344^2*6/5
sqrt(34.27)
mean(d)+1.96*5.85/sqrt(6)
mean(d)+1.64*5.85/sqrt(6)
mean(d)+1.64*5.85/sqrt(6)
mean(d)+1.64*5.34/sqrt(6)
mean(d)-1.64*5.34/sqrt(6)
sqrt(6)
sqrt(5)
5.34/sqrt(6)
mean(d)-2.015*5.34/sqrt(6)
mean(d)+2.015*5.34/sqrt(6)
mean(d)+1.833*5.34/sqrt(6)
mean(d)+1.83*5.34/sqrt(6)
mean(d)+2.02*5.34/sqrt(6)
mean(d)+2.57*5.34/sqrt(6)
mean(d)+2.13*5.34/sqrt(6)
mean(d)+2.02*5.34/sqrt(6)
mean(d)+2.02*5.34444/sqrt(6)
18.2+2.02*5.34444/sqrt(6)
18.2+2.02*5.34/sqrt(6)
18.2-2.02*5.34/sqrt(6)
0.08+0.24+0.41+0.2+0.07
N = 500
real_parm = matrix(c(0.5,0.6,0.7,0.8),nrow = 2,ncol = 2)
x1 = rnorm(N)
x2 = rnorm(N)
x = as.matrix(cbind(x1,x2))
x
real_P = exp(x%*%real_parm)/(rowSums(exp(x%*%real_parm))+1)
real_P
exp(x%*%real_parm)
real_P = cbind(real_P,1/(rowSums(exp(x%*%real_parm))+1))
real_P
colSums(real_P)
rowSums(real_P)
