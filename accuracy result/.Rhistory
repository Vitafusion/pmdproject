pp = t(as.matrix(p[,1:m]))
else
pp = as.matrix(p[,1:m])
sig = matrix(0,m,m)
for (i in 1:n) {
sig = sig + diag(pp[i,],nrow = m) - pp[i,]%*%t(pp[i,])
}
dd
sd
\a\fdas\f\a
n = nrow(p)
m = ncol(p)-1
if(n==1)
pp = t(as.matrix(p[,1:m]))
else
pp = as.matrix(p[,1:m])
sig = matrix(0,m,m)
for (i in 1:n) {
sig = sig + diag(pp[i,],nrow = m) - pp[i,]%*%t(pp[i,])
}
if(n==1)
pp = t(as.matrix(p[,1:m])) else
pp = as.matrix(p[,1:m])
n = nrow(p)
m = ncol(p)-1
if(n==1)  pp = t(as.matrix(p[,1:m])) else pp = as.matrix(p[,1:m])
mu = matrix(0, nrow = 1, ncol = ncol(pp))
for (i in n) {
mu = mu + pp[i,]
}
mu
pp
pp[i,]
mu.calcu = function(p){
n = nrow(p)
m = ncol(p)-1
if(n==1)  pp = t(as.matrix(p[,1:m])) else pp = as.matrix(p[,1:m])
mu = matrix(0, nrow = 1, ncol = ncol(pp))
for (i in 1:n) {
mu = mu + pp[i,]
}
return(as.vector(mu))
}
sig = sigma.calcu(p)
mu = mu.calcu(p)
mu
sig
pnorm(16.5, mean = mu, sd = sqrt(sig),lower.tail = F)
pnorm(17.5, mean = mu, sd = sqrt(sig),lower.tail = F)
pnorm(16.5, mean = mu, sd = sqrt(sig),lower.tail = F)
pnorm(15.5, mean = mu, sd = sqrt(sig),lower.tail = F)
0.7958296-0.6618329
0.6618329 - 0.6618329
0.6618329 - 0.5032412
pnorm(15.5, mean = mu, sd = sqrt(sig),lower.tail = F)-pnorm(16.5, mean = mu, sd = sqrt(sig),lower.tail = F)
pnorm(16.5, mean = mu, sd = sqrt(sig),lower.tail = F)-pnorm(17.5, mean = mu, sd = sqrt(sig),lower.tail = F)
pnorm(17.5, mean = mu, sd = sqrt(sig),lower.tail = F)-pnorm(18.5, mean = mu, sd = sqrt(sig),lower.tail = F)
pnorm(18.5, mean = mu, sd = sqrt(sig),lower.tail = F)-pnorm(19.5, mean = mu, sd = sqrt(sig),lower.tail = F)
p = pmatrix(30,2)
p
write.csv(p,'p.csv')
sig = sigma.calcu(p)
mu = mu.calcu(p)
mu
sig
pnorm(15.5, mean = mu, sd = sqrt(sig),lower.tail = F)-pnorm(16.5, mean = mu, sd = sqrt(sig),lower.tail = F)
pnorm(16.5, mean = mu, sd = sqrt(sig),lower.tail = F)-pnorm(17.5, mean = mu, sd = sqrt(sig),lower.tail = F)
pnorm(17.5, mean = mu, sd = sqrt(sig),lower.tail = F)-pnorm(18.5, mean = mu, sd = sqrt(sig),lower.tail = F)
pnorm(14.5, mean = mu, sd = sqrt(sig),lower.tail = F)-pnorm(15.5, mean = mu, sd = sqrt(sig),lower.tail = F)
pnorm(15.5, mean = mu, sd = sqrt(sig),lower.tail = F)-pnorm(16.5, mean = mu, sd = sqrt(sig),lower.tail = F)
pnorm(16.5, mean = mu, sd = sqrt(sig),lower.tail = F)-pnorm(17.5, mean = mu, sd = sqrt(sig),lower.tail = F)
pnorm(17.5, mean = mu, sd = sqrt(sig),lower.tail = F)-pnorm(18.5, mean = mu, sd = sqrt(sig),lower.tail = F)
pnorm(18.5, mean = mu, sd = sqrt(sig),lower.tail = F)-pnorm(19.5, mean = mu, sd = sqrt(sig),lower.tail = F)
p = pmatrix(30,3)
write.csv(p,'p.csv')
p
sig = sigma.calcu(p)
mu = mu.calcu(p)
mu
sig
pmvnorm(lower=c(9.5,9.5),upper = c(10.5,10.5), mean = mu, sigma = sig)
pmvnorm(lower=c(8.5,8.5),upper = c(9.5,9.5), mean = mu, sigma = sig)
pmvnorm(lower=c(10.5,10.5),upper = c(11.5,11.5), mean = mu, sigma = sig)
p = pmatrix(30,4)
sig = sigma.calcu(p)
mu = mu.calcu(p)
mu
sig
sigma.calcu = function(p){
n = nrow(p)
m = ncol(p)-1
if(n==1) pp = t(as.matrix(p[,1:m])) else pp = as.matrix(p[,1:m])
sig = matrix(0,m,m)
for (i in 1:n) {
sig = sig + diag(pp[i,],nrow = m) - pp[i,]%*%t(pp[i,])
}
return(sig)
}
mu.calcu = function(p){
n = nrow(p)
m = ncol(p)-1
if(n==1)  pp = t(as.matrix(p[,1:m])) else pp = as.matrix(p[,1:m])
mu = matrix(0, nrow = 1, ncol = ncol(pp))
for (i in 1:n) {
mu = mu + pp[i,]
}
return(as.vector(mu))
}
setwd("C:/Users/linzh/Desktop/pmd/accuracy result/older results")
source("C:/Users/linzh/Desktop/pmd/functions/myfunctions.R")
library(ggplot2)
library(scales)
library(dplyr)
#load data
norm_m3 = read.table("norm_m=3_r=200.txt")
setwd("C:/Users/linzh/Desktop/pmd/accuracy result")
#load data
norm_m3 = read.table("norm_m=3_r=200.txt")
norm_m4 = read.table("norm_m=4_r=100.txt")
norm_m5 = read.table("norm_m=5_r=100.txt")
norm_m6 = read.table("norm_m=6_r=100.txt")
norm_m7 = read.table("norm_m=7_r=100.txt")
norm_m8 = read.table("norm_m=8_r=100.txt")
#translate data format
norm_m3 = test.accuracy.dat.trans.r(norm_m3,3)
norm_m4 = test.accuracy.dat.trans.r(norm_m4,4)
norm_m5 = test.accuracy.dat.trans.r(norm_m5,5)
norm_m6 = test.accuracy.dat.trans.r(norm_m6,6)
norm_m7 = test.accuracy.dat.trans.r(norm_m7,7)
norm_m8 = test.accuracy.dat.trans.r(norm_m8,8)
#normal accuracy all data
norm_acc_all_dat = rbind(norm_m3,norm_m4,norm_m5,norm_m6,norm_m7,norm_m8)
pdf(file = 'normal accuracy plot.pdf')
norm.acc.mae.plot()
norm.acc.mae.trans.plot()
norm.acc.tae.plot()
dev.off()
View(norm_m3)
View(norm_m4)
View(norm_m5)
View(norm_m6)
View(norm_m7)
View(p)
norm_m8 = read.table("norm_m=8_r=100.txt")
View(norm_m8)
norm_m8 = test.accuracy.dat.trans.r(norm_m8,8)
#load data
norm_m3 = read.table("norm_m=3_r=200.txt")
norm_m4 = read.table("norm_m=4_r=100.txt")
norm_m5 = read.table("norm_m=5_r=100.txt")
norm_m6 = read.table("norm_m=6_r=100.txt")
norm_m7 = read.table("norm_m=7_r=100.txt")
norm_m8 = read.table("norm_m=8_r=100.txt")
#translate data format
norm_m3 = test.accuracy.dat.trans.r(norm_m3,3)
norm_m4 = test.accuracy.dat.trans.r(norm_m4,4)
norm_m5 = test.accuracy.dat.trans.r(norm_m5,5)
norm_m6 = test.accuracy.dat.trans.r(norm_m6,6)
norm_m7 = test.accuracy.dat.trans.r(norm_m7,7)
norm_m8 = test.accuracy.dat.trans.r(norm_m8,8)
View(norm_m8)
View(norm_m7)
View(norm_m6)
norm_acc_all_dat = rbind(norm_m3,norm_m4,norm_m5,norm_m6,norm_m7,norm_m8)
pdf(file = 'normal accuracy plot.pdf')
norm.acc.mae.plot()
norm.acc.mae.trans.plot()
norm.acc.tae.plot()
dev.off()
#load data
norm_m3 = read.table("norm_m=3_r=200.txt")
norm_m4 = read.table("norm_m=4_r=100.txt")
norm_m5 = read.table("norm_m=5_r=100.txt")
norm_m6 = read.table("norm_m=6_r=100.txt")
norm_m7 = read.table("norm_m=7_r=100.txt")
norm_m8 = read.table("norm_m=8_r=100.txt")
#translate data format
norm_m3 = test.accuracy.dat.trans.r(norm_m3,3)
norm_m4 = test.accuracy.dat.trans.r(norm_m4,4)
norm_m5 = test.accuracy.dat.trans.r(norm_m5,5)
norm_m6 = test.accuracy.dat.trans.r(norm_m6,6)
norm_m7 = test.accuracy.dat.trans.r(norm_m7,7)
norm_m8 = test.accuracy.dat.trans.r(norm_m8,8)
#normal accuracy all data
norm_acc_all_dat = rbind(norm_m3,norm_m4,norm_m5,norm_m6,norm_m7,norm_m8)
pdf(file = 'normal accuracy plot.pdf')
norm.acc.mae.plot()
norm.acc.mae.trans.plot()
norm.acc.tae.plot()
dev.off()
View(norm_m3)
View(pmatrix)
View(norm_m8)
View(norm_m7)
View(norm_m6)
View(norm_m5)
sparsity = read.table('sparsity.txt')
View(sparsity)
colnames(sparsity) = c('n'.'MAE')
colnames(sparsity) = c('n','MAE')
sparsity = sparsity[,2:3]
sparsity = read.table('sparsity.txt')
sparsity = sparsity[,2:3]
colnames(sparsity) = c('n','MAE')
ggplot(data = sparsity,aes(x=n,y=MAE)) +
scale_y_continuous(trans = log_trans(),labels = scaleFUN)
source("C:/Users/linzh/Desktop/pmd/functions/myfunctions.R")
library(ggplot2)
library(scales)
library(dplyr)
ggplot(data = sparsity,aes(x=n,y=MAE)) +
scale_y_continuous(trans = log_trans(),labels = scaleFUN)
ggplot(data = sparsity,aes(x=n,y=MAE)) + geom_path(size=1) +
scale_y_continuous(trans = log_trans(),labels = scaleFUN)
View(norm_m3)
sparsity$type = rep(0,200)
sparsity$type = rep(0,193)
dat = rbind(norm_m3[,c(1,2,5)],sparsity)
tmp = norm_m3[,c(1,2,5)]
View(tmp)
dat = rbind(tmp,sparsity)
View(dat)
sparsity = read.table('sparsity.txt')
sparsity = sparsity[,2:3]
colnames(sparsity) = c('n','MAE')
sparsity$type = as.factor(rep(0,193))
tmp = norm_m3[,c(1,2,5)]
dat = rbind(tmp,sparsity)
View(dat)
ggplot(data = sparsity,aes(x=n,y=MAE)) + geom_path(size=1,aes(linetype=type)) +
scale_y_continuous(trans = log_trans(),labels = scaleFUN)
ggplot(data = dat,aes(x=n,y=MAE)) + geom_path(size=1,aes(linetype=type)) +
scale_y_continuous(trans = log_trans(),labels = scaleFUN)
setwd("C:/Users/linzh/Desktop/pmd/accuracy result")
source("C:/Users/linzh/Desktop/pmd/functions/myfunctions.R")
library(ggplot2)
library(scales)
library(dplyr)
library(gridExtra)
ori_m3 = read.table('ori_m=3_r=100.txt')
ori_m4 = read.table('ori_m=4_r=100.txt')
ori_m5 = read.table('ori_m=5_r=100.txt')
ori_m6 = read.table('ori_m=6_r=100.txt')
ori_m7 = read.table('ori_m=7_r=100.txt')
ori_m8 = read.table('ori_m=8_r=100.txt')
ori_all_dat = original.data.trans()
ori_all_dat$method = rep("origi",nrow(ori_all_dat))
all_mae_dat = rbind(ori_all_dat,all_dat[,c('n','MAE','type','method')])
#normal
pdf(file = 'normal_origi_m=3.pdf')
compar.ori.mae.plot(3,meth = 'norm')
dev.off()
pdf(file = 'normal_origi_m=4.pdf')
compar.ori.mae.plot(4,meth = 'norm')
dev.off()
pdf(file = 'normal_origi_m=5.pdf')
compar.ori.mae.plot(5,meth = 'norm')
dev.off()
pdf(file = 'normal_origi_m=6.pdf')
compar.ori.mae.plot(6,meth = 'norm')
dev.off()
pdf(file = 'normal_origi_m=7.pdf')
compar.ori.mae.plot(7,meth = 'norm')
dev.off()
pdf(file = 'normal_origi_m=8.pdf')
compar.ori.mae.plot(8,meth = 'norm')
dev.off()
# simulation
pdf(file = 'simu_origi_m=3.pdf')
compar.ori.mae.plot(3,meth = 'simu')
dev.off()
pdf(file = 'simu_origi_m=4.pdf')
compar.ori.mae.plot(4,meth = 'simu')
dev.off()
pdf(file = 'simu_origi_m=5.pdf')
compar.ori.mae.plot(5,meth = 'simu')
dev.off()
pdf(file = 'simu_origi_m=6.pdf')
compar.ori.mae.plot(6,meth = 'simu')
dev.off()
pdf(file = 'simu_origi_m=7.pdf')
compar.ori.mae.plot(7,meth = 'simu')
dev.off()
pdf(file = 'simu_origi_m=8.pdf')
compar.ori.mae.plot(8,meth = 'simu')
dev.off()
#all
pdf(file = 'comp_m=3.pdf')
compar.all.ori.mae.plot(3)
dev.off()
pdf(file = 'comp_m=4.pdf')
compar.all.ori.mae.plot(4)
dev.off()
pdf(file = 'comp_m=5.pdf')
compar.all.ori.mae.plot(5)
dev.off()
pdf(file = 'comp_m=6.pdf')
compar.all.ori.mae.plot(6)
dev.off()
pdf(file = 'comp_m=7.pdf')
compar.all.ori.mae.plot(7)
dev.off()
pdf(file = 'comp_m=8.pdf')
compar.all.ori.mae.plot(8)
dev.off()
p3 = compar.ori.mae.plot(3,meth = 'norm')
p4 = compar.ori.mae.plot(4,meth = 'norm')
p5 = compar.ori.mae.plot(5,meth = 'norm')
p6 = compar.ori.mae.plot(6,meth = 'norm')
p7 = compar.ori.mae.plot(7,meth = 'norm')
p8 = compar.ori.mae.plot(8,meth = 'norm')
pdf(file = 'normalvsorig_all.pdf')
grid.arrange(p3,p4,p5,p6,p7,p8,
ncol = 3, nrow = 2)
dev.off()
p3 = compar.ori.mae.plot(3,meth = 'simu')
p4 = compar.ori.mae.plot(4,meth = 'simu')
p5 = compar.ori.mae.plot(5,meth = 'simu')
p6 = compar.ori.mae.plot(6,meth = 'simu')
p7 = compar.ori.mae.plot(7,meth = 'simu')
p8 = compar.ori.mae.plot(8,meth = 'simu')
pdf(file = 'simulationvsorig_all.pdf')
grid.arrange(p3,p4,p5,p6,p7,p8,
ncol = 3, nrow = 2)
dev.off()
p3 = compar.all.ori.mae.plot(3)
p4 = compar.all.ori.mae.plot(4)
p5 = compar.all.ori.mae.plot(5)
p6 = compar.all.ori.mae.plot(6)
p7 = compar.all.ori.mae.plot(7)
p8 = compar.all.ori.mae.plot(8)
pdf(file = 'vsorig_all.pdf')
grid.arrange(p3,p4,p5,p6,p7,p8,
ncol = 3, nrow = 2)
dev.off()
compar.all.ori.mae.plot = function(m){
expr=paste0('m','=',m)
scaleFUN <- function(x) sprintf("%.4f", x)
all_mae_dat %>% filter(type==m) %>%
ggplot(aes(x=n,y=MAE,colour = method,group = method)) +
geom_path(size=1,aes(linetype=method))+ ggtitle(expr) +
scale_y_continuous(trans = log_trans(),labels = scaleFUN)
}
p3 = compar.all.ori.mae.plot(3)
p4 = compar.all.ori.mae.plot(4)
p5 = compar.all.ori.mae.plot(5)
p6 = compar.all.ori.mae.plot(6)
p7 = compar.all.ori.mae.plot(7)
p8 = compar.all.ori.mae.plot(8)
grid.arrange(p3,p4,p5,p6,p7,p8,
ncol = 3, nrow = 2)
View(norm_m8)
p8 = compar.all.ori.mae.plot(8)
p8
log(0.19)
e%2.71
e^2.71
exp(2.71)
View(all_mae_dat)
View(all_dat)
setwd("C:/Users/linzh/Desktop/pmd/accuracy result")
source("C:/Users/linzh/Desktop/pmd/functions/myfunctions.R")
library(ggplot2)
library(scales)
library(dplyr)
library(gridExtra)
#load data
simu_m3 = read.table("simu_m=3_t=10^4_r=100.txt")
#load data
simu_m3 = read.table("simu_m=3_t=10^4_r=100.txt")
simu_m4 = read.table("simu_m=4_t=10^4_r=100.txt")
simu_m5 = read.table("simu_m=5_t=10^4_r=100.txt")
simu_m6 = read.table("simu_m=6_t=10^4_r=100.txt")
simu_m7 = read.table("simu_m=7_t=10^4_r=100.txt")
simu_m8 = read.table("simu_m=8_t=10^4_r=100.txt")
#translate data format
simu_m3 = test.accuracy.dat.trans.r(simu_m3,3)
simu_m4 = test.accuracy.dat.trans.r(simu_m4,4)
simu_m5 = test.accuracy.dat.trans.r(simu_m5,5)
simu_m6 = test.accuracy.dat.trans.r(simu_m6,6)
simu_m7 = test.accuracy.dat.trans.r(simu_m7,7)
simu_m8 = test.accuracy.dat.trans.r(simu_m8,8)
#simulation accuracy all data
simu_acc_all_dat = rbind(simu_m3,simu_m4,simu_m5,simu_m6,simu_m7,simu_m8)
pdf(file = 'simulation accuracy plot.pdf')
dev.off()
#load data
simu_m3 = read.table("simu_m=3_t=10^4_r=100.txt")
simu_m4 = read.table("simu_m=4_t=10^4_r=100.txt")
simu_m5 = read.table("simu_m=5_t=10^4_r=100.txt")
simu_m6 = read.table("simu_m=6_t=10^4_r=100.txt")
simu_m7 = read.table("simu_m=7_t=10^4_r=100.txt")
simu_m8 = read.table("simu_m=8_t=10^4_r=100.txt")
#translate data format
simu_m3 = test.accuracy.dat.trans.r(simu_m3,3)
simu_m4 = test.accuracy.dat.trans.r(simu_m4,4)
simu_m5 = test.accuracy.dat.trans.r(simu_m5,5)
simu_m6 = test.accuracy.dat.trans.r(simu_m6,6)
simu_m7 = test.accuracy.dat.trans.r(simu_m7,7)
simu_m8 = test.accuracy.dat.trans.r(simu_m8,8)
#simulation accuracy all data
simu_acc_all_dat = rbind(simu_m3,simu_m4,simu_m5,simu_m6,simu_m7,simu_m8)
rm(list=ls())
setwd("C:/Users/linzh/Desktop/pmd/accuracy result")
source("C:/Users/linzh/Desktop/pmd/functions/myfunctions.R")
library(ggplot2)
library(scales)
library(dplyr)
library(gridExtra)
#load data
simu_m3 = read.table("simu_m=3_t=10^4_r=100.txt")
simu_m4 = read.table("simu_m=4_t=10^4_r=100.txt")
simu_m5 = read.table("simu_m=5_t=10^4_r=100.txt")
simu_m6 = read.table("simu_m=6_t=10^4_r=100.txt")
simu_m7 = read.table("simu_m=7_t=10^4_r=100.txt")
simu_m8 = read.table("simu_m=8_t=10^4_r=100.txt")
#translate data format
simu_m3 = test.accuracy.dat.trans.r(simu_m3,3)
simu_m4 = test.accuracy.dat.trans.r(simu_m4,4)
simu_m5 = test.accuracy.dat.trans.r(simu_m5,5)
simu_m6 = test.accuracy.dat.trans.r(simu_m6,6)
simu_m7 = test.accuracy.dat.trans.r(simu_m7,7)
simu_m8 = test.accuracy.dat.trans.r(simu_m8,8)
View(simu_m3)
View(simu_m4)
View(simu_m6)
View(simu_m7)
View(simu_m8)
#simulation accuracy all data
simu_acc_all_dat = rbind(simu_m3,simu_m4,simu_m5,simu_m6,simu_m7,simu_m8)
#load data
norm_m3 = read.table("norm_m=3_r=200.txt")
norm_m4 = read.table("norm_m=4_r=100.txt")
norm_m5 = read.table("norm_m=5_r=100.txt")
norm_m6 = read.table("norm_m=6_r=100.txt")
norm_m7 = read.table("norm_m=7_r=100.txt")
norm_m8 = read.table("norm_m=8_r=100.txt")
View(norm_m8)
#translate data format
norm_m3 = test.accuracy.dat.trans.r(norm_m3,3)
norm_m4 = test.accuracy.dat.trans.r(norm_m4,4)
norm_m5 = test.accuracy.dat.trans.r(norm_m5,5)
norm_m6 = test.accuracy.dat.trans.r(norm_m6,6)
norm_m7 = test.accuracy.dat.trans.r(norm_m7,7)
norm_m8 = test.accuracy.dat.trans.r(norm_m8,8)
View(norm_m8)
View(norm_m7)
View(norm_m6)
View(norm_m5)
View(norm_m4)
View(norm_m3)
#normal accuracy all data
norm_acc_all_dat = rbind(norm_m3,norm_m4,norm_m5,norm_m6,norm_m7,norm_m8)
View(norm_acc_all_dat)
norm_acc_all_dat$method = rep('norm',nrow(norm_acc_all_dat))
simu_acc_all_dat$method = rep('simu',nrow(simu_acc_all_dat))
all_dat = rbind(simu_acc_all_dat,norm_acc_all_dat)
View(all_dat)
pdf(file = "comparison between simu and norm.pdf")
comparison.plot(3)
comparison.plot(4)
comparison.plot(5)
comparison.plot(6)
comparison.plot(7)
comparison.plot(8)
dev.off()
comparison.plot(4)
ori_m3 = read.table('ori_m=3_r=100.txt')
ori_m4 = read.table('ori_m=4_r=100.txt')
ori_m5 = read.table('ori_m=5_r=100.txt')
ori_m6 = read.table('ori_m=6_r=100.txt')
ori_m7 = read.table('ori_m=7_r=100.txt')
ori_m8 = read.table('ori_m=8_r=100.txt')
ori_all_dat = original.data.trans()
ori_all_dat$method = rep("origi",nrow(ori_all_dat))
all_mae_dat = rbind(ori_all_dat,all_dat[,c('n','MAE','type','method')])
View(all_mae_dat)
p3 = compar.ori.mae.plot(3,meth = 'norm')
p4 = compar.ori.mae.plot(4,meth = 'norm')
p5 = compar.ori.mae.plot(5,meth = 'norm')
p6 = compar.ori.mae.plot(6,meth = 'norm')
p7 = compar.ori.mae.plot(7,meth = 'norm')
p8 = compar.ori.mae.plot(8,meth = 'norm')
pdf(file = 'normalvsorig_all.pdf')
grid.arrange(p3,p4,p5,p6,p7,p8,
ncol = 3, nrow = 2)
dev.off()
grid.arrange(p3,p4,p5,p6,p7,p8,
ncol = 3, nrow = 2)
p3 = compar.ori.mae.plot(3,meth = 'simu')
p4 = compar.ori.mae.plot(4,meth = 'simu')
p5 = compar.ori.mae.plot(5,meth = 'simu')
p6 = compar.ori.mae.plot(6,meth = 'simu')
p7 = compar.ori.mae.plot(7,meth = 'simu')
p8 = compar.ori.mae.plot(8,meth = 'simu')
pdf(file = 'simulationvsorig_all.pdf')
grid.arrange(p3,p4,p5,p6,p7,p8,
ncol = 3, nrow = 2)
dev.off()
grid.arrange(p3,p4,p5,p6,p7,p8,
ncol = 3, nrow = 2)
p3 = compar.all.ori.mae.plot(3)
p4 = compar.all.ori.mae.plot(4)
p5 = compar.all.ori.mae.plot(5)
p6 = compar.all.ori.mae.plot(6)
p7 = compar.all.ori.mae.plot(7)
p8 = compar.all.ori.mae.plot(8)
grid.arrange(p3,p4,p5,p6,p7,p8,
ncol = 3, nrow = 2)
install.packages('poibin')
library(poibin)
i=1
